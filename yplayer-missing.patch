--- yconsole-3.4.3/include/prochandle.h.orig	1970-01-01 01:00:00.000000000 +0100
+++ yconsole-3.4.3/include/prochandle.h	2006-08-23 11:03:26.000000000 +0200
@@ -0,0 +1,63 @@
+/*
+	Process handling
+ */
+
+
+#ifndef PROCHANDLE_H
+#define PROCHANDLE_H
+
+#include <sys/types.h>
+
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+
+extern char **ExecExplodeCommand(const char *cmd, int *strc);
+
+extern int ExecProcessExists(pid_t pid);
+
+extern float ExecCPUGetLoad(int cpu_num);
+
+/* Regular execute, uses system(). This is for backwards compatability,
+ * but has security issues since it uses system()
+ */
+extern void Execute(const char *cmd);
+
+/* Non-blocking executes. */
+extern pid_t Exec(const char *cmd);
+extern pid_t ExecO(
+	const char *cmd, const char *stdout_path
+);
+extern pid_t ExecOE(
+	const char *cmd, const char *stdout_path, const char *stderr_path
+);
+extern pid_t ExecAO(
+	const char *cmd, const char *stdout_path
+);
+extern pid_t ExecAOE(
+	const char *cmd, const char *stdout_path, const char *stderr_path
+);
+
+/* Blocking executes. */
+extern pid_t ExecB(const char *cmd);
+extern pid_t ExecBO(
+	const char *cmd, const char *stdout_path
+);
+extern pid_t ExecBOE(
+	const char *cmd, const char *stdout_path, const char *stderr_path
+);
+extern pid_t ExecBAO(
+	const char *cmd, const char *stdout_path
+);
+extern pid_t ExecBAOE(
+	const char *cmd, const char *stdout_path, const char *stderr_path
+);
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif	/* PROCHANDLE_H */
